.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "JUGGLINGDB\-SCHEMA" "3" "October 2013" "1602 Software" "JugglingDB"
.
.SH "NAME"
\fBjugglingdb\-schema\fR \- Everything about schema, data types and model definition\.
.
.SH "DESCRIPTION"
Schema is a factory for classes\. Schema connected with specific database using adapter\.
.
.P
All classes within single schema shares same adapter type and one database connection\. But it\'s possible to use more than one schema to connect with different databases\.
.
.SH "EVENTS"
Instances of Schema are event emitters, events supported by default:
.
.TP
\fB\.on(\'connected\', function() {})\fR
Fired when db connection established\. Params: none\.
.
.TP
\fB\.on(\'log\', function(msg, duration) {})\fR
Fired when adapter logged line\. Params: String message, Number duration
.
.SH "USAGE"
.
.SS "Creating schema"
\fBSchema\fR constructor available on \fBjugglingdb\fR module:
.
.IP "" 4
.
.nf

var Schema = require(\'jugglingdb\')\.Schema;
.
.fi
.
.IP "" 0
.
.P
Schema constructor accepts two arguments\. First argument is adapter\. It could be adapter name or adapter package:
.
.IP "" 4
.
.nf

var schemaByAdapterName = new Schema(\'memory\');
var schemaByAdapterPackage = new Schema(require(\'redis\'));
.
.fi
.
.IP "" 0
.
.SS "Settings"
Second argument is optional settings\. Settings object format and defaults depends on specific adapter, but common fields are:
.
.TP
\fBhost\fR
Database host
.
.TP
\fBport\fR
Database port
.
.TP
\fBusername\fR
Username to connect to database
.
.TP
\fBpassword\fR
Password to connect to database
.
.TP
\fBdatabase\fR
Database name
.
.TP
\fBdebug\fR
Turn on verbose mode to debug db queries and lifecycle
.
.P
For adapter\-specific settings refer to adapter\'s readme file\.
.
.SS "Connecting to database"
Schema connecting to database automatically\. Once connection established schema object emit \'connected\' event, and set \fBconnected\fR flag to true, but it is not necessary to wait for \'connected\' event because all queries cached and executed when schema emit \'connected\' event\.
.
.P
To disconnect from database server call \fBschema\.disconnect\fR method\. This call forwarded to adapter if adapter have ability to connect/disconnect\.
.
.SS "Model definition"
To define model schema have single method \fBschema\.define\fR\. It accepts three argumets:
.
.TP
\fBmodel name\fR
String name in camel\-case with first upper\-case letter\. This name will be used later to access model\.
.
.TP
\fBproperties\fR
Object with property type definitions\. Key is property name, value is type definition\. Type definition can be function representing type of property (String, Number, Date, Boolean), or object with {type: String|Number|\.\.\., index: true|false} format\.
.
.TP
\fBsettings\fR
Object with model\-wide settings such as \fBtableName\fR or so\.
.
.P
Examples of model definition:
.
.IP "" 4
.
.nf

var User = schema\.define(\'User\', {
    email: String,
    password: String,
    birthDate: Date,
    activated: Boolean
});

var User = schema\.define(\'User\', {
    email: { type: String, limit: 150, index: true },
    password: { type: String, limit: 50 },
    birthDate: Date,
    registrationDate: {
        type: Date,
        default: function () { return new Date }
    },
    activated: { type: Boolean, default: false }
}, {
    table: \'users\'
});
.
.fi
.
.IP "" 0
.
.SS "DB structure syncronization"
Schema instance have two methods for updating db structure: automigrate and autoupdate\.
.
.P
The \fBautomigrate\fR method drop table (if exists) and create it again, \fBautoupdate\fR method generates ALTER TABLE query\. Both method accepts callback called when migration/update done\.
.
.P
To check if any db changes required use \fBisActual\fR method\. It accepts single \fBcallback\fR argument, which receive boolean value depending on db state: false if db structure outdated, true when schema and db is in sync:
.
.IP "" 4
.
.nf

schema\.isActual(function(err, actual) {
    if (!actual) {
        schema\.autoupdate();
    }
});
.
.fi
.
.IP "" 0
.
.SH "SEE ALSO"
jugglingdb\-model(3) jugglingdb\-adapter(3)
