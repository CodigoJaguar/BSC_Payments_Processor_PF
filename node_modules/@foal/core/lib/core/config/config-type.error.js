"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigTypeError = void 0;
const utils_1 = require("./utils");
class ConfigTypeError extends Error {
    constructor(key, expected, actual) {
        super();
        this.key = key;
        this.expected = expected;
        this.actual = actual;
        this.name = 'ConfigTypeError';
        const keywords = key.split('.');
        const lines = [];
        lines.push('  {');
        keywords.forEach((keyword, index) => {
            const spaces = '  '.repeat(index + 1);
            if (index === keywords.length - 1) {
                lines.push('->' + spaces + keyword + ': *************');
            }
            else {
                lines.push('  ' + spaces + keyword + ': {');
            }
        });
        keywords.forEach((_, index) => {
            if (index === keywords.length - 1) {
                return;
            }
            const spaces = '  '.repeat(keywords.length - index);
            lines.push(spaces + '}');
        });
        lines.push('  }');
        this.message = '\n\n'
            + (0, utils_1.makeBox)('Configuration file', lines)
            + '\n'
            + `The value of the configuration key "${key}" has an invalid type.\n`
            + '\n'
            + `Expected a "${expected}", but got a "${actual}".\n`;
    }
}
exports.ConfigTypeError = ConfigTypeError;
