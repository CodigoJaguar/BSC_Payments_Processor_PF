"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessionStore = exports.Store = exports.SessionAlreadyExists = void 0;
class SessionAlreadyExists extends Error {
    constructor() {
        super(...arguments);
        this.name = 'SessionAlreadyExists';
    }
}
exports.SessionAlreadyExists = SessionAlreadyExists;
/**
 * Store used to create, read, update and delete sessions.
 *
 * All session stores must inherit this abstract class.
 *
 * When this class is used with the `@dependency` decorator,
 * it returns the `ConcreteSessionStore` class from the file or the package specified
 * with the configuration key "settings.session.store".
 *
 * @export
 * @abstract
 * @class Store
 */
class Store {
    boot() { }
}
exports.Store = Store;
exports.SessionStore = Store;
Store.concreteClassConfigPath = 'settings.session.store';
Store.concreteClassName = 'ConcreteSessionStore';
