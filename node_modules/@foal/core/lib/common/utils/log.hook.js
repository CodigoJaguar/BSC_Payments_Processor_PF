"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Log = void 0;
const core_1 = require("../../core");
/**
 * Hook logging a message with optional information on the HTTP request.
 *
 * @param message The message to print.
 * @param options Options to specify which information on the HTTP request should be printed.
 */
/**
 * Hook factory logging a message with optional information on the HTTP request.
 *
 * @export
 * @param {string} message - The message to print on each request.
 * @param {LogOptions} [options={}] - Options to specify which information on the HTTP request should be printed.
 * @returns {HookDecorator} The hook.
 */
function Log(message, options = {}) {
    const logFn = options.logFn || console.log;
    return (0, core_1.Hook)((ctx) => {
        logFn(message);
        if (options.body) {
            logFn('Body: ', ctx.request.body);
        }
        if (options.params) {
            logFn('Params: ', ctx.request.params);
        }
        if (options.query) {
            logFn('Query: ', ctx.request.query);
        }
        if (options.headers === true) {
            logFn('Headers: ', ctx.request.headers);
        }
        else if (Array.isArray(options.headers)) {
            for (const header of options.headers) {
                const headerName = Object.keys(ctx.request.headers).find(head => header.toLowerCase() === head.toLowerCase() // Header names are case insensitive.
                );
                logFn(`${header}: `, headerName === undefined ? undefined : ctx.request.headers[headerName]);
            }
        }
    });
}
exports.Log = Log;
